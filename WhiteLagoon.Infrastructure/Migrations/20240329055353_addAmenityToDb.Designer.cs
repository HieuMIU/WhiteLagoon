// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WhiteLagoon.Infrastructure.Data;

#nullable disable

namespace WhiteLagoon.Infrastructure.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240329055353_addAmenityToDb")]
    partial class addAmenityToDb
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0-preview.2.24128.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("WhiteLagoon.Domain.Entities.Amenity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("VillaId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("VillaId");

                    b.ToTable("Amenities");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Free",
                            Name = "Swimming Pool",
                            VillaId = 1
                        },
                        new
                        {
                            Id = 2,
                            Description = "Membership",
                            Name = "Gym/Fitness Center",
                            VillaId = 1
                        },
                        new
                        {
                            Id = 3,
                            Description = "Need Reserve",
                            Name = "Playground",
                            VillaId = 1
                        },
                        new
                        {
                            Id = 4,
                            Description = "Free",
                            Name = "Tennis Court",
                            VillaId = 1
                        },
                        new
                        {
                            Id = 5,
                            Description = "VIP",
                            Name = "Spa",
                            VillaId = 2
                        },
                        new
                        {
                            Id = 6,
                            Description = "Free",
                            Name = "Sauna",
                            VillaId = 2
                        },
                        new
                        {
                            Id = 7,
                            Description = "Need reserve",
                            Name = "BBQ Area",
                            VillaId = 2
                        },
                        new
                        {
                            Id = 8,
                            Description = "Sessonal",
                            Name = "Movie Theater",
                            VillaId = 2
                        },
                        new
                        {
                            Id = 9,
                            Description = "Only Spring",
                            Name = "Community Garden",
                            VillaId = 3
                        },
                        new
                        {
                            Id = 10,
                            Description = "Free",
                            Name = "Yoga Studio",
                            VillaId = 3
                        },
                        new
                        {
                            Id = 11,
                            Description = "Free",
                            Name = "Billiards Room",
                            VillaId = 3
                        },
                        new
                        {
                            Id = 12,
                            Description = "Open from 9AM-8PM",
                            Name = "Library",
                            VillaId = 3
                        },
                        new
                        {
                            Id = 13,
                            Description = "Free",
                            Name = "Volleyball Court",
                            VillaId = 3
                        },
                        new
                        {
                            Id = 14,
                            Description = "Free",
                            Name = "Basketball Court",
                            VillaId = 3
                        });
                });

            modelBuilder.Entity("WhiteLagoon.Domain.Entities.Villa", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("Created_Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Occupancy")
                        .HasColumnType("int");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<int>("Sqft")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Updated_Date")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Villas");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Created_Date = new DateTime(2024, 3, 29, 0, 53, 51, 414, DateTimeKind.Local).AddTicks(4423),
                            Description = "Beautiful villa with ocean view",
                            ImageUrl = "https://example.com/image1.jpg",
                            Name = "Villa A",
                            Occupancy = 8,
                            Price = 500000.0,
                            Sqft = 3000,
                            Updated_Date = new DateTime(2024, 3, 29, 0, 53, 51, 414, DateTimeKind.Local).AddTicks(4475)
                        },
                        new
                        {
                            Id = 2,
                            Created_Date = new DateTime(2024, 3, 29, 0, 53, 51, 414, DateTimeKind.Local).AddTicks(4480),
                            Description = "Cozy villa nestled in the mountains",
                            ImageUrl = "https://example.com/image2.jpg",
                            Name = "Villa B",
                            Occupancy = 6,
                            Price = 400000.0,
                            Sqft = 2500,
                            Updated_Date = new DateTime(2024, 3, 29, 0, 53, 51, 414, DateTimeKind.Local).AddTicks(4482)
                        },
                        new
                        {
                            Id = 3,
                            Created_Date = new DateTime(2024, 3, 29, 0, 53, 51, 414, DateTimeKind.Local).AddTicks(4485),
                            Description = "Luxurious villa with private pool",
                            ImageUrl = "https://example.com/image3.jpg",
                            Name = "Villa C",
                            Occupancy = 10,
                            Price = 800000.0,
                            Sqft = 4000,
                            Updated_Date = new DateTime(2024, 3, 29, 0, 53, 51, 414, DateTimeKind.Local).AddTicks(4487)
                        });
                });

            modelBuilder.Entity("WhiteLagoon.Domain.Entities.VillaNumber", b =>
                {
                    b.Property<int>("Villa_Number")
                        .HasColumnType("int");

                    b.Property<string>("SpecialDetails")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("VillaId")
                        .HasColumnType("int");

                    b.HasKey("Villa_Number");

                    b.HasIndex("VillaId");

                    b.ToTable("VillaNumbers");

                    b.HasData(
                        new
                        {
                            Villa_Number = 101,
                            VillaId = 1
                        },
                        new
                        {
                            Villa_Number = 102,
                            VillaId = 1
                        },
                        new
                        {
                            Villa_Number = 201,
                            VillaId = 1
                        },
                        new
                        {
                            Villa_Number = 111,
                            VillaId = 2
                        },
                        new
                        {
                            Villa_Number = 112,
                            VillaId = 2
                        },
                        new
                        {
                            Villa_Number = 301,
                            VillaId = 3
                        },
                        new
                        {
                            Villa_Number = 302,
                            VillaId = 3
                        });
                });

            modelBuilder.Entity("WhiteLagoon.Domain.Entities.Amenity", b =>
                {
                    b.HasOne("WhiteLagoon.Domain.Entities.Villa", "Villa")
                        .WithMany()
                        .HasForeignKey("VillaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Villa");
                });

            modelBuilder.Entity("WhiteLagoon.Domain.Entities.VillaNumber", b =>
                {
                    b.HasOne("WhiteLagoon.Domain.Entities.Villa", "Villa")
                        .WithMany()
                        .HasForeignKey("VillaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Villa");
                });
#pragma warning restore 612, 618
        }
    }
}
